Main page: https://www.geeksforgeeks.org/fundamentals-of-algorithms/#MathematicalAlgorithms


Solve the following problems:
1) Find the absolute value of a number:
2) Convert Celsius to Fahrenheit
3) Quadratic Equation Roots
4) Fatorial of a number
5) Digits in Factorial
6) GP Term
7) Primality Test
8) Exactly 3 Divisors
9) Mean and Median
10) Addition under Modulo
11) Multiplication under Modulo
12) Modular Multiplicative Inverse


First try yourself, if you won't able to do then only proceed to solutions:- 

Note:- Solutions include only the functions

++++++++++++++  
+ Solutions: +
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

1) Find the absolute value of a number:

int absolute(int x) {
    if (x<0){
        return -x;
    }
    else{
        return x;
    }
}

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

2) Convert Celsius to Fahrenheit:

int cToF(C):
    return (C* 9/5) + 32


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

3) Quadratic Equation Roots:

//https://www.mathgoodies.com/calculators/quadratic_equations - Roots of a quadratic equation calculator

void quadraticRoots(int a,int b, int c)
{
   int D = (b*b) - 4*a*c;                           
   
   if (D < 0){
       printf("Imaginary");
   }
   else if (D == 0){
       int x = floor(((-b) + sqrt(D))/(2*a)); 
       printf("%d %d", x, x);
   }
   else if (D > 0){
       int x = floor(((-b) + sqrt(D))/(2*a)); 
       int y = floor(((-b) - sqrt(D))/(2*a)); 
       printf("%d %d", x, y);
   }  
}

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

4) Fatorial of a number:

#define ll long long                  // To save time we can define long long as 'll'
long long factorial (int N)
{
    ll res = 1;
    for (ll i = N; i > 0; i--){
        
        res *= i;
    }
    return res;
}


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

5) Digits in Factorial:

def digitsInFactorial(N):    
    res = math.factorial(N)  
    digits = 0   
    while res > 0:
        res = res // 10
        digits += 1
        
    return digits

        

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

6) GP Term:

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


7) Primality Test: Generating a range of prime no's these can be done in two ways:
1) Using for loops and checking whether a number is divisible by one and itself. 
2) Using Sieve of Erastothenes

__1st method:-__ 

import math
def prime(n):
  print("Prime")
  for i in range(2,n):
    cnt = 0
    for j in range(1, math.floor(math.sqrt(n))):
      if i%j == 0:
        cnt += 1
                
    if cnt== 1:
      print(i)
    
prime(int(input()))



__2nd method using Sieves theorem__:

def Sieve(n):
  prime = [True for i in range(n+1)]
  p = 2
  while p*p <= n:
    if prime[p] == True:
      for i in range(p*p, n+1, p):
        prime[i] = False
      
    p += 1

  for i in range(2,n+1):
    if prime[i] == True:
      print(i)

Sieve(5000)


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

8) Exactly 3 Divisors:

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

9) Mean and Median:

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
10) Addition under Modulo:

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
11) Multiplication under Modulo:

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
12) Modular Multiplicative Inverse:




